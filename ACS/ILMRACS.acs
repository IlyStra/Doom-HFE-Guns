#library "ILMRACS"
#include "zcommon.acs"

Global Int UMR_ClassCount[6];

Script "HFEG_BuddySelfHealth" (Void) Net
{
	If(ClassifyActor(0) & Actor_Player){Terminate;}
	For(Int I; I < 32; I += 1)
	{
		SetActorProperty(0, APROP_Health, GetActorProperty(0, APROP_Health)+1);
		Delay(1);
	}
}

Script "HFEG_CheckForNeedInMedTARG" (Void) Net
{
	SetActivator(0, AAPTR_Target);
	SetResultValue(GetActorProperty(0, APROP_Health) <= FixedMul(GetActorProperty(0, APROP_SpawnHealth), 0.7));
}

Script "HFEG_SetUMRPropsByClass" (Int Class) Net
{
	If(ClassifyActor(0) & Actor_Player){Terminate;}
	If(Class < 0){Class = 0;}
	If(Class > 6){Class = 6;}
	UMR_ClassCount[Class] += 1;
	Switch(Class)
	{
		Case 0:
			SetActorProperty(0, APROP_NameTag, "\c[cyan]UAC Infantry Corporal");
			Break;

		Case 1:
			SetActorProperty(0, APROP_NameTag, "\c[cyan]UAC Infantry Sergeant");
			SetActorProperty(0, APROP_SpawnHealth, 225);
			SetUserVariable(0, "User_NormalHealth", 225);
			SetActorProperty(0, APROP_Health, 225);
			Break;

		Case 2:
			SetActorProperty(0, APROP_NameTag, "\c[cyan]UAC Infantry Chief warrant officer");
			SetActorProperty(0, APROP_SpawnHealth, 250);
			SetUserVariable(0, "User_NormalHealth", 250);
			SetActorProperty(0, APROP_Health, 250);
			SetActorProperty(0, APROP_Speed, 10.0);
			Break;

		Case 3:
			SetActorProperty(0, APROP_NameTag, "\c[cyan]UAC Infantry Lieutenant");
			SetActorProperty(0, APROP_SpawnHealth, 300);
			SetUserVariable(0, "User_NormalHealth", 300);
			SetActorProperty(0, APROP_Health, 300);
			SetActorProperty(0, APROP_Speed, 12.0);
			Break;

		Case 4:
			SetActorProperty(0, APROP_NameTag, "\c[cyan]UAC Infantry Major");
			SetActorProperty(0, APROP_SpawnHealth, 350);
			SetUserVariable(0, "User_NormalHealth", 350);
			SetActorProperty(0, APROP_Health, 350);
			SetActorProperty(0, APROP_Speed, 13.0);
			Break;

		Case 5:
			SetActorProperty(0, APROP_NameTag, "\c[cyan]                    UAC EISG\n\c[Cyan][Elite Infantry Spec-op Group]");
			SetActorProperty(0, APROP_SpawnHealth, 420);
			SetUserVariable(0, "User_NormalHealth", 420);
			SetActorProperty(0, APROP_Health, 420);
			SetActorProperty(0, APROP_Speed, 14.0);
			Break;

		Case 6:
			SetActorProperty(0, APROP_NameTag, "\c[cyan]                    UAC EISG Medic\n\c[Cyan][Elite Infantry Spec-op Group]");
			SetActorProperty(0, APROP_SpawnHealth, 450);
			SetUserVariable(0, "User_NormalHealth", 450);
			SetActorProperty(0, APROP_Health, 450);
			SetActorProperty(0, APROP_Speed, 14.0);
			Break;
	}
}

Script "HFEG_UMRDeath" (Int Class) Net
{
	If(ClassifyActor(0) & Actor_Player){Terminate;}
	UMR_ClassCount[Class] -= 1;
}

Script "HFEG_UMRTakesHealth" (Void) Net
{
	If(CheckProximity(0, "HealthBonus", 32.0, 1, CPXF_Ancestor | CPXF_SetTracer | CPXF_Closest))
	{
		SetActorProperty(0, APROP_Health, GetActorProperty(0, APROP_Health)+2);
		SetActivator(0, AAPTR_Tracer);
		Thing_Remove(0);
	}
	If(CheckProximity(0, "Stimpack", 32.0, 1, CPXF_Ancestor | CPXF_SetTracer | CPXF_Closest))
	{
		SetActorProperty(0, APROP_Health, GetActorProperty(0, APROP_Health)+20);
		SetActivator(0, AAPTR_Tracer);
		Thing_Remove(0);
	}
	If(CheckProximity(0, "Medikit", 32.0, 1, CPXF_Ancestor | CPXF_SetTracer | CPXF_Closest))
	{
		SetActorProperty(0, APROP_Health, GetActorProperty(0, APROP_Health)+50);
		SetActivator(0, AAPTR_Tracer);
		Thing_Remove(0);
		Terminate;
	}
	If(CheckProximity(0, "Health", 32.0, 1, CPXF_Ancestor | CPXF_SetTracer | CPXF_Closest))
	{
		SetActorProperty(0, APROP_Health, GetActorProperty(0, APROP_Health)+20);
		SetActivator(0, AAPTR_Tracer);
		Thing_Remove(0);
	}
}

Bool MapStared = 0;

Script "HFEG_UMRNewMap" Enter Net
{
	If(MapStared == True){Terminate;}
	MapStared = True;
	Int SpawnerTID;
	If(UMR_ClassCount[0] > 0)
	{
		For(Int I; I < UMR_ClassCount[0]; I += 1)
		{
			SpawnerTID = UniqueTID();
			SpawnForced("HFEG_UACMarineSpawner", GetActorX(0), GetActorY(0), GetActorZ(0), SpawnerTID, Random(0, 255));
			SetThingSpecial(SpawnerTID, 0, 0, 1);
		}
	}
	If(UMR_ClassCount[1] > 0)
	{
		For(Int I; I < UMR_ClassCount[0]; I += 1)
		{
			SpawnerTID = UniqueTID();
			SpawnForced("HFEG_UACMarineSpawner", GetActorX(0), GetActorY(0), GetActorZ(0), SpawnerTID, Random(0, 255));
			SetThingSpecial(SpawnerTID, 0, 1, 1);
		}
	}
	If(UMR_ClassCount[2] > 0)
	{
		For(Int I; I < UMR_ClassCount[0]; I += 1)
		{
			SpawnerTID = UniqueTID();
			SpawnForced("HFEG_UACMarineSpawner", GetActorX(0), GetActorY(0), GetActorZ(0), SpawnerTID, Random(0, 255));
			SetThingSpecial(SpawnerTID, 0, 2, 1);
		}
	}
	If(UMR_ClassCount[3] > 0)
	{
		For(Int I; I < UMR_ClassCount[0]; I += 1)
		{
			SpawnerTID = UniqueTID();
			SpawnForced("HFEG_UACMarineSpawner", GetActorX(0), GetActorY(0), GetActorZ(0), SpawnerTID, Random(0, 255));
			SetThingSpecial(SpawnerTID, 0, 3, 1);
		}
	}
	If(UMR_ClassCount[4] > 0)
	{
		For(Int I; I < UMR_ClassCount[0]; I += 1)
		{
			SpawnerTID = UniqueTID();
			SpawnForced("HFEG_UACMarineSpawner", GetActorX(0), GetActorY(0), GetActorZ(0), SpawnerTID, Random(0, 255));
			SetThingSpecial(SpawnerTID, 0, 4, 1);
		}
	}
	If(UMR_ClassCount[5] > 0)
	{
		For(Int I; I < UMR_ClassCount[0]; I += 1)
		{
			SpawnerTID = UniqueTID();
			SpawnForced("HFEG_UACMarineSpawner", GetActorX(0), GetActorY(0), GetActorZ(0), SpawnerTID, Random(0, 255));
			SetThingSpecial(SpawnerTID, 0, 5, 1);
		}
	}
	If(UMR_ClassCount[6] > 0)
	{
		For(Int I; I < UMR_ClassCount[0]; I += 1)
		{
			SpawnerTID = UniqueTID();
			SpawnForced("HFEG_UACMarineSpawner", GetActorX(0), GetActorY(0), GetActorZ(0), SpawnerTID, Random(0, 255));
			SetThingSpecial(SpawnerTID, 0, 6, 1);
		}
	}
}

Script "HFEG_PlayerProps" Enter Net
{
	If(CheckActorProperty(0, APROP_NameTag, "UacPlayer"))
	{
		Switch(Random(0, 4))
		{
			Case 0:SetActorProperty(0, APROP_NameTag, StrParam(s:"\c[cyan]EISG Second lieutenant:\c[white] ", n:0));Break;
			Case 1:SetActorProperty(0, APROP_NameTag, StrParam(s:"\c[cyan]EISG Lieutenant:\c[white] ", n:0));Break;
			Case 2:SetActorProperty(0, APROP_NameTag, StrParam(s:"\c[cyan]EISG Captain:\c[white] ", n:0));Break;
			Case 3:SetActorProperty(0, APROP_NameTag, StrParam(s:"\c[cyan]EISG Major:\c[white] ", n:0));Break;
			Default:SetActorProperty(0, APROP_NameTag, StrParam(s:"\c[cyan]EISG Colonel:\c[white] ", n:0));Break;
		}
	}
	SetActorProperty(0, APROP_Species, "UACGuard");
	SetActorProperty(0, APROP_SpawnHealth, 100);
}

Script "HFEG_PlayerPropsRS" Respawn Net
{
	ACS_NamedExecuteAlways("HFEG_PlayerProps", 0);
}

Script "HFEG_BuddyNameExecuterCL" Enter Net
{
	While(True)
	{
		ACS_NamedExecuteAlways("HFEG_BuddyName", 0);
		Delay(4);
	}
}

Str ColorTable[20] = {"\c[C4]", "\c[Q2]", "\c[C5]",
"\c[E2]", "\c[L4]", "\c[C3]", "\c[Z1]", "\c[Green]",
"\c[A6]", "\c[S1]", "\c[K2]", "\c[L7]", "\c[L5]",
"\c[J1]", "\c[S9]", "\c[Q0]", "\c[A8]", "\c[R8]",
"\c[J2]", "\c[Z6]"};

Int CRColorTable[20] = {CR_Red, CR_Red, CR_Orange,
CR_Gold, CR_Yellow, CR_Yellow, CR_Green, CR_Green,
CR_Green, CR_Green, CR_LightBlue, CR_Cyan, CR_Blue,
CR_Purple, CR_Purple, CR_Purple, CR_Purple, CR_Purple,
CR_Purple, CR_Purple};

Script "HFEG_GetHPColor" (Void)
{
	If(GetActorProperty(0, APROP_Health) <= FixedMul(GetActorProperty(0, APROP_SpawnHealth), 0.1))
	{SetResultValue(0);Terminate;}
	If(GetActorProperty(0, APROP_Health) <= FixedMul(GetActorProperty(0, APROP_SpawnHealth), 0.2))
	{SetResultValue(1);Terminate;}
	If(GetActorProperty(0, APROP_Health) <= FixedMul(GetActorProperty(0, APROP_SpawnHealth), 0.3))
	{SetResultValue(2);Terminate;}
	If(GetActorProperty(0, APROP_Health) <= FixedMul(GetActorProperty(0, APROP_SpawnHealth), 0.4))
	{SetResultValue(3);Terminate;}
	If(GetActorProperty(0, APROP_Health) <= FixedMul(GetActorProperty(0, APROP_SpawnHealth), 0.5))
	{SetResultValue(4);Terminate;}
	If(GetActorProperty(0, APROP_Health) <= FixedMul(GetActorProperty(0, APROP_SpawnHealth), 0.6))
	{SetResultValue(5);Terminate;}
	If(GetActorProperty(0, APROP_Health) <= FixedMul(GetActorProperty(0, APROP_SpawnHealth), 0.7))
	{SetResultValue(6);Terminate;}
	If(GetActorProperty(0, APROP_Health) <= FixedMul(GetActorProperty(0, APROP_SpawnHealth), 0.8))
	{SetResultValue(7);Terminate;}
	If(GetActorProperty(0, APROP_Health) <= FixedMul(GetActorProperty(0, APROP_SpawnHealth), 0.9))
	{SetResultValue(8);Terminate;}
	If(GetActorProperty(0, APROP_Health) <= GetActorProperty(0, APROP_SpawnHealth))
	{SetResultValue(9);Terminate;}
	If(GetActorProperty(0, APROP_Health) <= FixedMul(GetActorProperty(0, APROP_SpawnHealth), 1.2))
	{SetResultValue(10);Terminate;}
	If(GetActorProperty(0, APROP_Health) <= FixedMul(GetActorProperty(0, APROP_SpawnHealth), 1.4))
	{SetResultValue(11);Terminate;}
	If(GetActorProperty(0, APROP_Health) <= FixedMul(GetActorProperty(0, APROP_SpawnHealth), 1.6))
	{SetResultValue(12);Terminate;}
	If(GetActorProperty(0, APROP_Health) <= FixedMul(GetActorProperty(0, APROP_SpawnHealth), 1.8))
	{SetResultValue(13);Terminate;}
	If(GetActorProperty(0, APROP_Health) <= FixedMul(GetActorProperty(0, APROP_SpawnHealth), 2.0))
	{SetResultValue(14);Terminate;}
	If(GetActorProperty(0, APROP_Health) <= FixedMul(GetActorProperty(0, APROP_SpawnHealth), 2.2))
	{SetResultValue(15);Terminate;}
	If(GetActorProperty(0, APROP_Health) <= FixedMul(GetActorProperty(0, APROP_SpawnHealth), 2.4))
	{SetResultValue(16);Terminate;}
	If(GetActorProperty(0, APROP_Health) <= FixedMul(GetActorProperty(0, APROP_SpawnHealth), 2.6))
	{SetResultValue(17);Terminate;}
	If(GetActorProperty(0, APROP_Health) <= FixedMul(GetActorProperty(0, APROP_SpawnHealth), 2.8))
	{SetResultValue(18);Terminate;}
	SetResultValue(19);
}

Script "HFEG_BuddyName" (Void) ClientSide
{
	If(ClassifyActor(0) & Actor_Bot){Terminate;}
	Bool Killer;
	If(ClassifyActor(0) & Actor_Dead){Killer = True;}
	If(SetActivatorToTarget(0) == False){Terminate;}
	Int HPClr = ACS_NamedExecuteWithResult("HFEG_GetHPColor");
	SetHudSize(960, 720, False);
	SetFont("BigFont");
	If(Killer == True)
	{HudMessageBold(s:"\c[White][\c[Red]KILLER\c[White]]\c[Black]: \c[Orange]", s:GetActorProperty(0, APROP_NameTag); HudMSG_FadeOut, 1861, CR_Orange, 480.0, 100.0, 0.5, 1.5);
	SetHudSize(150, 480, False);
	SetFont("HHPBR1");
	HudMessageBold(s:"A";HudMSG_FadeOut, 1868, CR_Untranslated, 75.0, 94.0, 0.75, 1.0);
	}
	Else
	{
		If(GetActorProperty(0, APROP_Friendly) == True)
		{
			HudMessageBold(s:GetActorProperty(0, APROP_NameTag); HudMSG_FadeOut, 1861, CR_Green, 480.0, 100.0, 0.5, 1.0);
			SetHudSize(150, 480, False);
			If(CheckActorProperty(0, APROP_Species, "UACGuard") == True)
			{SetFont("HHPBR0");
			HudMessageBold(s:"A";HudMSG_FadeOut, 1868, CR_Untranslated, 75.0, 94.0, 0.75, 1.0);}
			Else
			{SetFont("HHPBR3");
			HudMessageBold(s:"A";HudMSG_FadeOut, 1868, CR_Untranslated, 75.0, 94.0, 0.75, 1.0);}
		}
		Else
		{
			HudMessageBold(s:GetActorProperty(0, APROP_NameTag); HudMSG_FadeOut, 1861, CR_Gray, 480.0, 100.0, 0.5, 1.0);
			SetHudSize(150, 480, False);
			SetFont("HHPBR2");
			HudMessageBold(s:"A";HudMSG_FadeOut, 1868, CR_Untranslated, 75.0, 94.0, 0.75, 1.0);
		}
	}
	SetHudSize(1280, 960, False);
	SetFont("BigFont");
	HudMessageBold(s:ColorTable[HPClr], i:GetActorProperty(0, APROP_Health), s:" / ", i:GetActorProperty(0, APROP_SpawnHealth); HudMSG_FadeOut, 1860, CRColorTable[HPClr], 640.0, 165.0, 0.75, 1.0);
}

Script "HFEG_ActiveState" (Void) Net
{
	If(	CheckActorState(0, "MedSelfHealth")||
		CheckActorState(0, "MedSelfHealthProc"))
	{
		Delay(6);
		Restart;
	}
	Else
	{
		SetActorState(0, "Active");
	}
}

Script "HFEG_DeactiveState" (Void) Net
{
	If(	CheckActorState(0, "MedSelfHealth")||
		CheckActorState(0, "MedSelfHealthProc"))
	{
		Delay(6);
		Restart;
	}
	Else
	{
		SetActorState(0, "InActive");
	}
}

Script "HFEG_CallUMR" (Void) Net
{
	If(GetActorProperty(0, APROP_Health) <= 0){Terminate;}
	If(CheckInventory("HFEG_UMRCallOnOff") <= 0)
	{
		GiveInventory("HFEG_UMRCallOnOff", 1);
		SpawnForced("HFEG_PlayerCallUMR", 0, 0, 0);
		Print(s:"Call to follow");
		Terminate;
	}
	Else
	{
		TakeInventory("HFEG_UMRCallOnOff", 1);
		SpawnForced("HFEG_PlayerCallWithoutUMR", 0, 0, 0);
		Print(s:"Call to be on his own");
		Terminate;
	}
}

Function Int ACS_SpawnEx(
Str type, Int spotid, Fixed RadXYZ,
fixed angle, fixed pitch, int newtid, Bool fog, Bool CenterZ)
{
	fixed x = GetActorX(spotid) +  FixedMul(Cos(pitch),FixedMul(cos(angle), RadXYZ));
	fixed y = GetActorY(spotid) +  FixedMul(Cos(pitch),FixedMul(sin(angle), RadXYZ));
	If(CenterZ)
	{
	fixed CPostZ = GetActorZ(spotid) + FixedMul(GetActorProperty(spotid, APROP_Height), 0.5);
	fixed z = CPostZ +  FixedMul(Sin(-pitch), RadXYZ);}
	Else
	{fixed z = GetActorZ(spotid) +  FixedMul(Sin(-pitch), RadXYZ);}

	int test = Spawn(type, x, y, z, newtid, angle >> 8);

	if (test && fog)
		Spawn("TeleportFog", x, y, z, 0, 0);

	if (test)
		return TRUE;

		return FALSE;
}

Script "HFEG_Flashlight" (Void) Net ClientSide
{
	Static Bool OnOff;
	Static Bool AutoTerminate;
	If(GetActorProperty(0, APROP_Health) <= 0){Terminate;}
	If(OnOff)
	{
		AutoTerminate = True;
		OnOff = False;
		PlaySound(0, "FlashOff");
		Terminate;
	}
	Else
	{
		OnOff = True;
		PlaySound(0, "FlashOn");
		While(AutoTerminate == False)
		{
			If(ACS_SpawnEx("HFEG_Light64", 0, 64.0, GetActorAngle(0), GetActorPitch(0), 0, False, True) == False)
			{ACS_SpawnEx("HFEG_Light64", 0, 0.0, GetActorAngle(0), GetActorPitch(0), 0, False, True);}
			ACS_SpawnEx("HFEG_Light128", 0, 192.0, GetActorAngle(0), GetActorPitch(0), 0, False, True);
			ACS_SpawnEx("HFEG_Light256", 0, 384.0, GetActorAngle(0), GetActorPitch(0), 0, False, True);
			ACS_SpawnEx("HFEG_Light512", 0, 768.0, GetActorAngle(0), GetActorPitch(0), 0, False, True);
			If(GetActorProperty(0, APROP_Health) <= 0)
			{
				AutoTerminate = False;
				OnOff = False;
				Terminate;
			}
			Delay(1);
		}
		AutoTerminate = False;
		Terminate;
	}
}

Script "HFEG_GetUMRECvar" (Void) Net
{
//	GetCvar() It is better not to call very many times,
//	because the function is quite heavy in terms of
//	optimization.
	Static Bool CVr_UMREnable;
	Static Int CVr_CallCount;
	If(CVr_CallCount < 4)
	{SetResultValue(CVr_UMREnable);
	CVr_CallCount += 1;}
	Else{
	CVr_CallCount = 0;CVr_UMREnable = GetCvar("HFEGC_UMREnable");
	SetResultValue(CVr_UMREnable);}
}

Script "HFEG_TMap_PushBack" (Int LineAngle)
{
	ThrustThing(LineAngle, 2048, 0, 0);
	Delay(4);
	ThrustThing(LineAngle, 2408, 0, 0);
	Delay(4);
	ThrustThing(LineAngle, 2408, 0, 0);
	Delay(4);
	ThrustThing(LineAngle, 2408, 0, 0);
	Delay(4);
	ThrustThing(LineAngle, 2408, 0, 0);
	Delay(4);
	ThrustThing(LineAngle, 2408, 0, 0);
	Delay(4);
	ThrustThing(LineAngle, 2408, 0, 0);
}